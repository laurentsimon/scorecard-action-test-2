{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "automationDetails": {
        "id": "supply-chain/local/unknown-04 May 22 19:55 +0000"
      },
      "tool": {
        "driver": {
          "name": "Scorecard",
          "informationUri": "https://github.com/ossf/scorecard",
          "semanticVersion": "unknown",
          "rules": [
            {
              "id": "PinnedDependenciesID",
              "name": "Pinned-Dependencies",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies",
              "shortDescription": {
                "text": "Pinned-Dependencies"
              },
              "fullDescription": {
                "text": "Determines if the project has declared and pinned its dependencies."
              },
              "help": {
                "text": "Determines if the project has declared and pinned its dependencies.",
                "markdown": "**Remediation (click \"Show more\" below)**:\n\n- First determine if your project is producing a library or application. If it is a library, you generally don't want to pin dependencies of library users, and should not follow any remediation steps.\n\n- If your project is producing an application, declare all your dependencies with specific versions in your package format file (e.g. `package.json` for npm, `requirements.txt` for python). For C/C++, check in the code from a trusted source and add a `README` on the specific version used (and the archive SHA hashes).\n\n- If the package manager supports lock files (e.g. `package-lock.json` for npm), make sure to check these in the source code as well. These files maintain signatures for the entire dependency tree and saves from future exploitation in case the package is compromised.\n\n- For Dockerfiles, pin dependencies by hash. See [Dockerfile](https://github.com/ossf/scorecard/blob/main/cron/worker/Dockerfile) for example. \n\n- For GitHub workflows, pin dependencies by hash. See [main.yaml](https://github.com/ossf/scorecard/blob/f55b86d6627cc3717e3a0395e03305e81b9a09be/.github/workflows/main.yml#L27) for example. To determine the permissions needed for your workflows, you may use [StepSecurity's online tool](https://app.stepsecurity.io/) by ticking the \"Pin actions to a full length commit SHA\". You may also tick the \"Restrict permissions for GITHUB_TOKEN\" to fix issues found by the Token-Permissions check.\n\n- To help update your dependencies after pinning them, use tools such as\n\n Github's [dependabot](https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/)\n\nor [renovate bot](https://github.com/renovatebot/renovate).\n\n\n\n**Severity**: Medium\n\n\n\n**Details**:\n\nRisk: `Medium` (possible compromised dependencies)\n\n\n\nThis check tries to determine if the project pins its dependencies. \n\nA \"pinned dependency\" is a dependency that is explicitly set to a specific hash instead of \n\nallowing a mutable version or range of versions. It\n\nis currently limited to repositories hosted on GitHub, and does not support\n\nother source hosting repositories (i.e., Forges). \n\n\n\nThe check works by looking for unpinned dependencies in Dockerfiles, shell scripts and GitHub workflows.\n\n\n\nPinned dependencies reduce several security risks:\n\n\n\n  - They ensure that checking and deployment are all done with the same\n\n    software, reducing deployment risks, simplifying debugging, and enabling\n\n    reproducibility. \n\n  - They can help mitigate compromised dependencies from undermining the\n\n    security of the project (in the case where you've evaluated the pinned\n\n    dependency, you are confident it's not compromised, and a later version is\n\n    released that is compromised). \n\n  - They are one way to [counter dependency confusion (aka substitution) attacks](https://azure.microsoft.com/en-us/resources/3-ways-to-mitigate-risk-using-private-package-feeds/),\n\n    in which an application uses multiple feeds to acquire software packages (a\n\n    \"hybrid configuration\"), and attackers fool the user into using a malicious\n\n    package via a feed that was not expected for that package.\n\n\n\nHowever, pinning dependencies can inhibit software updates, either because of a\n\nsecurity vulnerability or because the pinned version is compromised. Mitigate\n\nthis risk by:\n\n\n\n  - [having applications and _not_ libraries pin to specific hashes](https://jbeckwith.com/2019/12/18/package-lock/);\n\n  - using automated tools to notify applications when their dependencies are\n\n    outdated;\n\n  - quickly updating applications that do pin dependencies.\n\n\n\nFor projects hosted on GitHub, you can learn more about\n\ndependencies using the [GitHub dependency graph](https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph).\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "precision": "high",
                "problem.severity": "warning",
                "security-severity": "4.0",
                "tags": [
                  "supply-chain",
                  "security",
                  "dependencies"
                ]
              }
            },
            {
              "id": "TokenPermissionsID",
              "name": "Token-Permissions",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions",
              "shortDescription": {
                "text": "Token-Permissions"
              },
              "fullDescription": {
                "text": "Determines if the project's workflows follow the principle of least privilege."
              },
              "help": {
                "text": "Determines if the project's workflows follow the principle of least privilege.",
                "markdown": "**Remediation (click \"Show more\" below)**:\n\n- Set permissions as `read-all` or `contents: read` as described in GitHub's [documentation](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions).\n\n- To help determine the permissions needed for your workflows, you may use [StepSecurity's online tool](https://app.stepsecurity.io/) by ticking the \"Restrict permissions for GITHUB_TOKEN\". You may also tick the \"Pin actions to a full length commit SHA\" to fix issues found by the Pinned-dependencies check.\n\n\n\n**Severity**: High\n\n\n\n**Details**:\n\nRisk: `High` (vulnerable to malicious code additions)\n\n\n\nThis check determines whether the project's automated workflows tokens are set\n\nto read-only by default. It is currently limited to repositories hosted on\n\nGitHub, and does not support other source hosting repositories (i.e., Forges).\n\n\n\nSetting token permissions to read-only follows the principle of least privilege.\n\nThis is important because attackers may use a compromised token with write\n\naccess to push malicious code into the project.\n\n\n\nThe highest score is awarded when the permissions definitions in each workflow's\n\nyaml file are set as read-only at the\n\n[top level](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions)\n\nand the required write permissions are declared at the\n\n[run-level](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idpermissions).\n\nOne point is reduced from the score if all jobs have their permissions defined but the top level permissions are not defined. \n\nThis configuration is secure, but there is a chance that when a new job is added to the workflow, its job permissions could be \n\nleft undefined because of human error.\n\n\n\nThe check cannot detect if the \"read-only\" GitHub permission setting is\n\nenabled, as there is no API available.\n\n\n\nAdditionally, points are reduced if certain write permissions are defined for a job. \n\n\n\n### Write permissions causing a small reduction\n\n* `statuses` - May allow an attacker to change the result of pre-submit checks and get a PR merged.\n\n* `checks` - May allow an attacker to remove pre-submit checks and introduce a bug.\n\n* `security-events` - May allow an attacker to read vulnerability reports before a patch is available. However, points are not reduced if the job utilizes a recognized action for uploading SARIF results.\n\n* `deployments` - May allow an attacker to charge repo owner by triggering VM runs, and tiny chance an attacker can trigger a remote service with code they own if server accepts code/location variables unsanitized.\n\n\n\n### Write permissions causing a large reduction\n\n* `contents` - Allows an attacker to commit unreviewed code. However, points are not reduced if the job utilizes a recognized packaging action or command.\n\n* `packages` - Allows an attacker to publish packages. However, points are not reduced if the job utilizes a recognized packaging action or command.\n\n* `actions` - May allow an attacker to steal GitHub secrets by approving to run an action that needs approval.\n\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "precision": "high",
                "problem.severity": "error",
                "security-severity": "7.0",
                "tags": [
                  "supply-chain",
                  "security",
                  "infrastructure"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "snippet": {
                    "text": "actions/github-script@v5"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/combine-prs.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "snippet": {
                    "text": "actions/checkout@v2.3.3"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/combine-prs.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "snippet": {
                    "text": "actions/github-script@v3"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/combine-prs.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "snippet": {
                    "text": "actions/github-script@v5"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/combine-prs.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "snippet": {
                    "text": "actions/checkout@v2"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/scorecard-analysis.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "snippet": {
                    "text": "actions/upload-artifact@v2"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/scorecard-analysis.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "snippet": {
                    "text": "github/codeql-action/upload-sarif@v1"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/scorecard-analysis.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "GitHub-owned action not pinned by hash\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/scorecard-analysis.yml/main?enable=pin)"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: docker image not pinned by hash\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "snippet": {
                    "text": "FROM python:3.7"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "docker image not pinned by hash"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download detected\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 24,
                  "endLine": 25,
                  "snippet": {
                    "text": "curl bla | bash"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download detected"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: pip installation not pinned by hash\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 29,
                  "endLine": 30,
                  "snippet": {
                    "text": "pip install -r requirements.txt"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "pip installation not pinned by hash"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download-then-run\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "snippet": {
                    "text": "/tmp/file3"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download-then-run"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download-then-run\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "snippet": {
                    "text": "/tmp/file1"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download-then-run"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download-then-run\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 43,
                  "endLine": 45,
                  "snippet": {
                    "text": "bash /tmp/file3"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download-then-run"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download-then-run\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 48,
                  "endLine": 49,
                  "snippet": {
                    "text": "bash /tmp/file1"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download-then-run"
              }
            }
          ]
        },
        {
          "ruleId": "PinnedDependenciesID",
          "ruleIndex": 0,
          "message": {
            "text": "score is 5: insecure (not pinned by hash) download-then-run\nClick Remediation section below to solve this issue"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "snippet": {
                    "text": "/tmp/file3"
                  }
                },
                "artifactLocation": {
                  "uri": "Dockerfile-downloads",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "insecure (not pinned by hash) download-then-run"
              }
            }
          ]
        },
        {
          "ruleId": "TokenPermissionsID",
          "ruleIndex": 1,
          "message": {
            "text": "score is 0: job level 'contents' permission set to 'write'\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=permissions)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "snippet": {
                    "text": "write"
                  }
                },
                "artifactLocation": {
                  "uri": ".github/workflows/combine-prs.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "job level 'contents' permission set to 'write'\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/combine-prs.yml/main?enable=permissions)"
              }
            }
          ]
        },
        {
          "ruleId": "TokenPermissionsID",
          "ruleIndex": 1,
          "message": {
            "text": "score is 0: no top level permission defined\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/hello.yml/main?enable=permissions)\nClick Remediation section below for further remediation help"
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "startLine": 1,
                  "endLine": 1
                },
                "artifactLocation": {
                  "uri": ".github/workflows/hello.yml",
                  "uriBaseId": "%SRCROOT%"
                }
              },
              "message": {
                "text": "no top level permission defined\nRemediation tip: update your workflow using [https://app.stepsecurity.io](https://app.stepsecurity.io/secureworkflow/laurentsimon/scorecard-action-test-2/hello.yml/main?enable=permissions)"
              }
            }
          ]
        }
      ]
    }
  ]
}
